// 1-КОМЕНТАРІ
// Коментарі в JavaScript використовуються для пояснення коду та тимчасового відключення коду
// Існує два типи коментарів:

// Однорядковий коментар - починається з // і діє до кінця рядка
// Приклад однорядкового коментаря

// Можна робити декілька
// однорядкових коментарів
// підряд

/* Багаторядковий коментар - починається з /* і закінчується */
/* Використовується для
   великих блоків коментарів
   або документації
   Може займати багато рядків */


// 2-РОЗДІЛЬНИКИ
// Роздільники в JS використовуються для розділення інструкцій та блоків коду

// Основні роздільники:
//  ; - крапка з комою (завершення інструкції)
//  () - круглі дужки (групування виразів, параметри функцій)
//  {} - фігурні дужки (блоки коду, об'єкти)
//  [] - квадратні дужки (масиви, доступ до властивостей)
//  , - кома (розділення елементів у масивах)

// Приклади використання крапки з комою (;):
// a = 3; // можна не додавати в кінці рядка
// b = 4 

// a = 3; b = 4 // тут ; обов'язкова для розділення інструкцій в одному рядку

// JavaScript дозволяє розбивати інструкції на декілька рядків:
// let a
// a
// =
// 3
// console.log(a);

// Особливі випадки:
// const y = test + log
// ;(a+b).toString() // ; на початку захищає від помилок

// return, throw, yield, continue // розрив рядка після цих операторів ЗАВЖДИ сприймається як розділювач ;

// 3-ІДЕНТИФІКАТОРИ
// Ідентифікатори - це імена змінних, функцій, класів тощо
// Правила створення ідентифікаторів:
// 1. Можуть містити літери, цифри, _ та $
// 2. Повинні починатися з літери, _ або $
// 3. Чутливі до регістру (message ≠ Message)

// Правильні приклади:
// Message     message     MESSAGE // різні ідентифікатори
// my_Variable // snake_case з великою літерою
// count$ // з символом $
// total_Sum // змішаний стиль
// user_Name // змішаний стиль
// x_Coordinate // з підкресленням
// _Coordinate // починається з підкреслення
// price$ // закінчується $
// $element // починається з $
// totalAmount$ // camelCase з $
// first_name // snake_case
// max_length // snake_case
// is_active // snake_case для булевих змінних

// Неправильні приклади:
// 123variable // не можна починати з цифри
// my-variable // дефіс заборонений
// my.function // крапка заборонена
// 1function // не можна починати з цифри
// const = 43 // не можна використовувати ключові слова


// 4-КЛЮЧОВІ СЛОВА
// Зарезервовані слова, які мають спеціальне значення в JavaScript:

// Керування потоком:
// if, else - умовні конструкції
// for, while - цикли
// switch, case, break - множинний вибір
// continue - пропуск ітерації
// return - повернення значення з функції

// Оголошення:
// function - оголошення функції
// var, const, let - оголошення змінних
// class - оголошення класу

// Логічні значення:
// true, false - булеві літерали

// Обробка помилок:
// try, catch, finally - обробка винятків
// throw - генерація винятку

// Оператори:
// instanceof, typeof - перевірка типів
// delete - видалення властивостей
// default - значення за замовчуванням

// ООП:
// extends - наслідування
// super - звернення до батьківського класу

// Модулі:
// import, export - робота з модулями

// Асинхронне програмування:
// async, await - асинхронні операції

// 5-ЛІТЕРАЛИ
// Літерали - це фіксовані значення в коді

// Числові літерали:
// 12 // цілі числа
// 1.4 // дробові числа

// Рядкові літерали:
// "Test" // подвійні лапки
// "23454535" // числа як рядок
// 'milk for cat' // одинарні лапки
// `very big` // зворотні лапки (шаблонні рядки)

// Булеві літерали:
// false // хибність
// true // істина

// Спеціальні літерали:
// null // відсутність значення

// 6-ОПЕРАТОРИ
// Оператори виконують дії над операндами

// Арифметичні:
// +, -, *, / // додавання, віднімання, множення, ділення

// Логічні та порівняння:
// && (і), || (або) // логічні оператори
// ==, === (строга рівність), <, > // оператори порівняння

// 7-КЕРУЮЧІ ПОСЛІДОВНОСТІ (докладно в уроці про тип даних String)
// Спеціальні символи в рядках:
// \n - новий рядок
// \t - табуляція
// \' - одинарна лапка
// \" - подвійна лапка
// \\ - зворотній слеш